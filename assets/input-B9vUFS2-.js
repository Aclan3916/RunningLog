import{r as i,m as g,j as x,c as h}from"./index-DOe4G4Vl.js";function y(t,r){return`${t} returned \`undefined\`. Seems you forgot to wrap component within ${r}`}function C(t={}){const{name:r,strict:n=!0,hookName:e="useContext",providerName:o="Provider",errorMessage:a,defaultValue:u}=t,s=i.createContext(u);s.displayName=r;function c(){var d;const l=i.useContext(s);if(!l&&n){const p=new Error(a??y(e,o));throw p.name="ContextError",(d=Error.captureStackTrace)==null||d.call(Error,p,c),p}return l}return[s.Provider,c,s]}function w(...t){return r=>{const n=[];for(const e of t)if(typeof e=="function"){const o=e(r);typeof o=="function"&&n.push(o)}else e&&(e.current=r);if(n.length)return()=>{for(const e of n)e()}}}function P(t){var e,o;let r=(e=Object.getOwnPropertyDescriptor(t.props,"ref"))==null?void 0:e.get,n=r&&"isReactWarning"in r&&r.isReactWarning;return n?t.ref:(r=(o=Object.getOwnPropertyDescriptor(t,"ref"))==null?void 0:o.get,n=r&&"isReactWarning"in r&&r.isReactWarning,n?t.props.ref:t.props.ref||t.ref)}const f=t=>{const r=i.memo(i.forwardRef((n,e)=>{const{asChild:o,children:a,...u}=n;if(!o)return i.createElement(t,{...u,ref:e},a);const s=i.Children.only(a);if(!i.isValidElement(s))return null;const c=P(s);return i.cloneElement(s,{...g(u,s.props),ref:e?w(e,c):c})}));return r.displayName=t.displayName||t.name,r},R=()=>{const t=new Map;return new Proxy(f,{apply(r,n,e){return f(e[0])},get(r,n){const e=n;return t.has(e)||t.set(e,f(e)),t.get(e)}})},E=R(),[v,F]=C({name:"FieldContext",hookName:"useFieldContext",providerName:"<FieldProvider />",strict:!1}),m=i.forwardRef((t,r)=>{const n=F(),e=g(n==null?void 0:n.getInputProps(),t);return x.jsx(E.input,{...e,ref:r})});m.displayName="FieldInput";const{withContext:N}=h({key:"input"}),k=N(m);export{k as I};
